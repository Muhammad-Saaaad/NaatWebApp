
@model NaatWebApp.Models.Albums

@{
    ViewBag.Title = "CreateAlbum";
}

<b>User ID : </b> @Session["uid"]
<br />
<b>Full Name : </b>@Session["fn"]
<br />

@*Most important*@

<h2 align=" center">CreateAlbum</h2>

@*here our form data is in multi-part means we have data in text and also in file, Important for Exams*@

@using (Html.BeginForm("CreateAlbum", "Album", FormMethod.Post, new { enctype = "multipart/form-date" }))
{
    //new { enctype = "multipart/form-date"  this sends the file to the server without it file cannot be sent}

    @Html.AntiForgeryToken()


    <div>

        <div class="form-group">
            @Html.LabelFor(model => model.ano, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ano, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ano, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.aname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.aname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.aname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />

        @*
            TextBoxFor take any type of input
            but EditorFor make the box type the same as the model type
            example if input is in nuber then box type will also be integer
        *@

        <div class="form-group">
            @Html.LabelFor(model => model.imgfile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.imgfile, new { type = "file", htmlAttributes = new { @class = "form-control" } })

                @*as Editorfor is not set for file type value so we use textboxfor*@

                @Html.ValidationMessageFor(model => model.imgfile, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

}
